name: Publish

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v1

      - name: "Install Node.js, NPM and Yarn"
        uses: actions/setup-node@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          node-version: 16

      - name: Install dependencies & Build release
        run: |
          npm install
          npm run package
      - name: Created files
        run: ls -l ./release/build

      - name: Upload release
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: xresloader/upload-to-github-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "LICENSE.md;release/build/*.deb;release/build/*.AppImage"
          delete_file: "LICENSE.md;release/build/*.deb;release/build/*.AppImage"
          tag_name: continuous_releases
          overwrite: true
          verbose: true
          draft: false

      - name: Upload release
        if: ${{ matrix.os == 'windows-latest' }}
        uses: xresloader/upload-to-github-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "release/build/*.exe"
          delete_file: "release/build/*.exe"
          tag_name: continuous_releases
          overwrite: true
          verbose: true
          draft: false

      - name: Upload release
        if: ${{ matrix.os == 'macOS-latest' }}
        uses: xresloader/upload-to-github-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "release/build/*.dmg"
          delete_file: "release/build/*.dmg"
          tag_name: continuous_releases
          overwrite: true
          verbose: true
          draft: false
